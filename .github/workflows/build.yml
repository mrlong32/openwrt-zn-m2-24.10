name: ZN-M2 IPQ6000 固件（修复IPQ60xx目录搜索）

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: 安装系统依赖
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential git wget unzip gcc g++ make \
            libncurses5-dev libssl-dev python3 rsync file ccache

      - name: 克隆源码并严格验证IPQ60xx支持
        run: |
          git clone https://github.com/LiBwrt/openwrt-6.x.git openwrt
          cd openwrt
          git fetch --all
          
          # 分支筛选与切换
          echo "=== 所有可用分支 ==="
          git branch -a
          ALL_BRANCHES=$(git branch -r | grep -v "HEAD" | sed 's/origin\///' | sort -u)
          CANDIDATE_BRANCHES=$(echo "$ALL_BRANCHES" | grep -E "nss|ipq60|6\.[0-9]+|qualcomm" | sort -u)
          [ -z "$CANDIDATE_BRANCHES" ] && CANDIDATE_BRANCHES="$ALL_BRANCHES"
          
          FOUND_BRANCH=""
          for branch in $CANDIDATE_BRANCHES; do
            if git checkout "$branch"; then
              FOUND_BRANCH="$branch"
              break
            fi
          done
          [ -z "$FOUND_BRANCH" ] && { echo "所有分支无法切换"; exit 1; }
          echo "=== 已切换到分支: $FOUND_BRANCH ==="
          
          # 【增强搜索逻辑】扩大搜索范围，验证目录存在性
          echo "=== 验证target/linux目录是否存在 ==="
          if [ ! -d "target/linux" ]; then
            echo "错误：target/linux目录不存在，源码结构异常"
            ls -l target/  # 显示target目录内容
            exit 1
          fi
          
          # 全局搜索ipq60xx相关目录（不限制深度）
          echo "=== 全局搜索IPQ60xx配置... ==="
          IPQ60XX_CONFIGS=$(find target/linux/ -name "ipq60xx" -type d)
          
          # 严格验证搜索结果
          if [ -z "$IPQ60XX_CONFIGS" ]; then
            echo "错误：分支$FOUND_BRANCH完全不包含IPQ60xx配置！"
            echo "target/linux目录结构："
            ls -l target/linux/  # 显示实际存在的平台目录
            exit 1
          fi
          
          # 选择第一个有效配置目录
          IPQ60XX_CONFIGS=$(echo "$IPQ60XX_CONFIGS" | head -n1)
          echo "=== 找到IPQ60xx配置路径：$IPQ60XX_CONFIGS ==="
          
          # 修复feeds和依赖
          sed -i '/telephony/d; /kiddin9/d' feeds.conf.default
          ./scripts/feeds update -a -f || { ./scripts/feeds update -a -f || exit 1; }
          ./scripts/feeds install -a
          ./scripts/feeds install libcrypt-compat boost-system libxcrypt

      - name: 配置固件（防空路径处理）
        run: |
          cd openwrt
          
          # 【防空保护】再次验证路径有效性
          if [ -z "$IPQ60XX_CONFIGS" ] || [ ! -d "$IPQ60XX_CONFIGS" ]; then
            echo "错误：IPQ60xx配置路径无效: $IPQ60XX_CONFIGS"
            exit 1
          fi
          
          # 【可靠提取平台目录】从绝对路径中提取（如/xxx/target/linux/qualcommax/ipq60xx → qualcommax）
          PLATFORM_DIR=$(dirname "$IPQ60XX_CONFIGS" | xargs basename)
          if [ "$PLATFORM_DIR" = "." ] || [ -z "$PLATFORM_DIR" ]; then
            echo "错误：提取平台目录失败，当前配置路径：$IPQ60XX_CONFIGS"
            echo "路径解析过程："
            dirname "$IPQ60XX_CONFIGS"  # 显示父目录
            exit 1
          fi
          echo "=== 提取到平台目录：$PLATFORM_DIR ==="
          
          # 生成设备配置
          echo "CONFIG_TARGET_$PLATFORM_DIR=y" >> .config
          echo "CONFIG_TARGET_${PLATFORM_DIR}_ipq60xx=y" >> .config
          for device in "qcom_ipq6000_m2" "zn_m2"; do
            echo "CONFIG_TARGET_${PLATFORM_DIR}_ipq60xx_DEVICE_$device=y" >> .config
          done
          
          # 强制依赖
          echo "CONFIG_PACKAGE_libcrypt-compat=y" >> .config
          echo "CONFIG_PACKAGE_boost-system=y" >> .config
          echo "CONFIG_PACKAGE_libxcrypt=y" >> .config
          
          # 核心功能
          echo "CONFIG_PACKAGE_qca-nss-dp=y" >> .config
          echo "CONFIG_PACKAGE_kmod-ath11k=y" >> .config
          echo "CONFIG_PACKAGE_luci=y" >> .config
          
          # 禁用冲突包
          echo "CONFIG_PACKAGE_alpine=n" >> .config
          echo "CONFIG_PACKAGE_apr=n" >> .config
          echo "CONFIG_PACKAGE_domoticz=n" >> .config
          
          make defconfig
          
          # 最终验证
          grep "CONFIG_TARGET_$PLATFORM_DIR=y" .config || { echo "平台配置无效"; exit 1; }

      - name: 编译固件
        run: |
          cd openwrt
          make -j1 V=s 2>&1 | tee compile.log || { tail -n 100 compile.log; exit 1; }

      - name: 搜索固件
        run: |
          cd openwrt
          FIRMWARE_FILE=$(find bin/ -name "*.bin" | grep -i "ipq6000.*m2" | head -n1)
          [ -z "$FIRMWARE_FILE" ] && { find bin/ -name "*.bin"; exit 1; }
          cp "$FIRMWARE_FILE" ./zn-m2-firmware.bin

      - name: 上传结果
        uses: actions/upload-artifact@v4
        with:
          name: zn-m2-ipq6000-firmware
          path: |
            openwrt/zn-m2-firmware.bin
            openwrt/compile.log
          retention-days: 14
    
