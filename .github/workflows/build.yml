name: ZN-M2 OpenWRT 24.10 编译（设备目标修复版）

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: 缓存编译环境（不含系统目录，避免权限问题）
        uses: actions/cache@v3
        id: env-cache
        with:
          path: |
            ~/.ccache
            ./openwrt  # 仅缓存源码和编译产物
          key: ${{ runner.os }}-openwrt-znm2-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-openwrt-znm2-

      - name: 安装编译依赖
        if: steps.env-cache.outputs.cache-hit != 'true'
        run: |
          echo "=== 安装依赖 ==="
          sudo apt-get update
          sudo apt-get install -y build-essential clang flex bison g++ gawk gcc-multilib g++-multilib \
            gettext git libncurses5-dev libssl-dev python3 python3-distutils rsync unzip zlib1g-dev \
            file wget curl ccache

      - name: 获取OpenWRT源码
        if: steps.env-cache.outputs.cache-hit != 'true'
        run: |
          git clone https://github.com/openwrt/openwrt.git openwrt
          cd openwrt
          git checkout openwrt-24.10
          echo "=== 当前源码分支: $(git branch --show-current)"

      - name: 集成LibWRT与ZN-M2设备树
        run: |
          cd openwrt
          
          # 克隆LibWRT（仅首次）
          if [ ! -d "package/libwrt" ]; then
            git clone https://github.com/LiBwrt/openwrt-6.x.git package/libwrt
            cd package/libwrt
            git checkout k6.12-nss
            cd ../..
          fi
          
          # 查找并复制设备树（强制验证路径）
          DTS_FILE=$(find package/libwrt -name "ipq6000-m2.dts" | head -n1)
          if [ -z "$DTS_FILE" ]; then
            echo "错误：未找到ZN-M2设备树"
            exit 1
          fi
          echo "找到设备树：$DTS_FILE"
          
          TARGET_DTS_DIR="target/linux/qualcommax/files/arch/arm64/boot/dts/qcom/"
          mkdir -p $TARGET_DTS_DIR
          cp $DTS_FILE $TARGET_DTS_DIR
          echo "设备树复制结果：$(ls -l $TARGET_DTS_DIR/ipq6000-m2.dts)"

      - name: 强制添加ZN-M2设备定义（关键修复）
        run: |
          cd openwrt
          
          # 确认设备配置文件路径（qualcommax/ipq60xx的正确路径）
          IMAGE_MK="target/linux/qualcommax/image/ipq60xx.mk"
          echo "设备配置文件：$IMAGE_MK"
          
          # 先删除可能存在的旧定义（避免冲突）
          sed -i '/qcom_ipq6000_m2/d' $IMAGE_MK
          
          # 写入ZN-M2设备定义（强制覆盖）
          cat << 'EOF' >> $IMAGE_MK
          define Device/qcom_ipq6000_m2
            $(call Device/FitImage)
            $(call Device/UbiFit)
            DEVICE_VENDOR := ZN
            DEVICE_MODEL := M2
            DEVICE_DTS := qcom/ipq6000-m2
            DEVICE_PACKAGES := kmod-usb3 kmod-usb-dwc3-qcom kmod-leds-gpio
            SUPPORTED_DEVICES += ipq6000-m2
          endef
          TARGET_DEVICES += qcom_ipq6000_m2
          EOF
          
          # 验证设备定义是否正确写入
          echo "=== 验证设备定义 ==="
          grep "qcom_ipq6000_m2" $IMAGE_MK || { echo "设备定义写入失败"; exit 1; }

      - name: 配置编译目标（强制指定ZN-M2）
        run: |
          cd openwrt
          
          # 清空旧配置，强制生成新配置
          rm -f .config
          
          # 直接指定目标设备为ZN-M2（关键）
          echo "CONFIG_TARGET_qualcommax=y" >> .config
          echo "CONFIG_TARGET_qualcommax_ipq60xx=y" >> .config
          echo "CONFIG_TARGET_qualcommax_ipq60xx_DEVICE_qcom_ipq6000_m2=y" >> .config
          echo "CONFIG_PACKAGE_luci=y" >> .config
          echo "CONFIG_PACKAGE_libwrt=y" >> .config
          
          # 生成配置并验证
          make defconfig
          
          # 关键验证：确认目标设备是否为ZN-M2
          echo "=== 验证目标设备配置 ==="
          grep "CONFIG_TARGET_DEVICE_qualcommax_ipq60xx_DEVICE_qcom_ipq6000_m2=y" .config \
            || { echo "目标设备配置失败"; exit 1; }

      - name: 编译固件
        run: |
          cd openwrt
          make -j$(nproc) V=s 2>&1 | tee compile.log
          
          # 编译后检查是否生成ZN-M2固件
          echo "=== 编译产物检查 ==="
          find bin/targets/qualcommax/ipq60xx -name "*qcom_ipq6000_m2*.bin" \
            || { echo "未生成ZN-M2固件"; exit 1; }

      - name: 上传正确固件和日志
        uses: actions/upload-artifact@v4
        with:
          name: zn-m2-correct-firmware
          path: |
            openwrt/bin/targets/qualcommax/ipq60xx/*qcom_ipq6000_m2*.bin
            openwrt/compile.log
          retention-days: 7
