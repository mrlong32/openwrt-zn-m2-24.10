name: ZN-M2 IPQ6000 固件（修复feeds缺失）

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: 安装依赖
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential git wget unzip gcc g++ make \
            libncurses5-dev libssl-dev python3 rsync file

      - name: 获取源码并修复feeds（核心修复）
        run: |
          # 克隆LibWRT仓库
          git clone https://github.com/LiBwrt/openwrt-6.x.git openwrt
          cd openwrt
          
          # 分支选择机制
          echo "=== 可用分支列表 ==="
          git branch -r
          
          NSS_BRANCHES=("main" "dev-nss" "k6.12-nss" "k5.15-nss")
          FOUND_BRANCH=""
          
          for branch in "${NSS_BRANCHES[@]}"; do
            if git checkout "$branch"; then
              FOUND_BRANCH="$branch"
              echo "=== 成功切换到NSS分支: $branch ==="
              break
            fi
          done
          
          if [ -z "$FOUND_BRANCH" ]; then
            echo "错误：未找到任何NSS分支"
            exit 1
          fi
          
          # 【核心修复1：使用绝对路径的官方源，确保可访问】
          cat > feeds.conf.default << 'EOF'
          src-git base https://git.openwrt.org/openwrt/base.git
          src-git packages https://git.openwrt.org/feed/packages.git
          src-git luci https://git.openwrt.org/project/luci.git
          EOF
          
          # 【核心修复2：初始化feeds目录结构，避免缺失】
          mkdir -p feeds/base feeds/packages feeds/luci
          
          # 【核心修复3：分步更新每个feed，带重试机制】
          echo "=== 分步更新feeds ==="
          feeds=("base" "packages" "luci")
          for feed in "${feeds[@]}"; do
            echo "=== 更新 $feed 源（第1次尝试） ==="
            if ! ./scripts/feeds update -f $feed; then
              echo "=== $feed 源更新失败，重试一次 ==="
              ./scripts/feeds update -f $feed || {
                echo "错误：$feed 源更新失败，检查网络或源地址"
                exit 1
              }
            fi
          done
          
          # 【核心修复4：验证feeds目录是否存在】
          echo "=== 验证feeds目录 ==="
          for feed in "${feeds[@]}"; do
            if [ ! -d "feeds/$feed" ]; then
              echo "错误：feeds/$feed 目录仍缺失，当前目录结构："
              ls -l feeds/
              exit 1
            fi
          done
          
          # 安装组件
          ./scripts/feeds install -a
          
          # 清理非官方插件
          rm -rf package/libwrt/package/utils/
          rm -rf package/libwrt/package/emortal/
          rm -rf package/libwrt/package/feeds/

      - name: 配置固件
        run: |
          cd openwrt
          
          # 设备配置
          echo "CONFIG_TARGET_qualcommax=y" >> .config
          echo "CONFIG_TARGET_qualcommax_ipq60xx=y" >> .config
          echo "CONFIG_TARGET_qualcommax_ipq60xx_DEVICE_qcom_ipq6000_m2=y" >> .config
          
          # NSS加速驱动
          echo "CONFIG_PACKAGE_kmod-qca-nss-dp=y" >> .config
          echo "CONFIG_PACKAGE_kmod-qca-nss-ecm=y" >> .config
          echo "CONFIG_PACKAGE_kmod-qca-nss-gmac=y" >> .config
          echo "CONFIG_PACKAGE_qca-nss-clients=y" >> .config
          
          # 官方组件
          echo "CONFIG_PACKAGE_kmod-ath11k=y" >> .config
          echo "CONFIG_PACKAGE_ath11k-firmware-qcn9074=y" >> .config
          echo "CONFIG_PACKAGE_kmod-usb-dwc3-qcom=y" >> .config
          echo "CONFIG_PACKAGE_luci=y" >> .config
          echo "CONFIG_PACKAGE_luci-app-firewall=y" >> .config
          
          make defconfig
          grep "CONFIG_PACKAGE_kmod-qca-nss-dp=y" .config || { echo "NSS驱动缺失"; exit 1; }

      - name: 编译固件
        run: |
          cd openwrt
          make -j$(nproc) V=s 2>&1 | tee compile.log

      - name: 验证固件
        run: |
          cd openwrt/bin/targets/qualcommax/ipq60xx
          ls -l *qcom_ipq6000_m2*.bin || { echo "未生成目标固件"; exit 1; }

      - name: 上传固件
        uses: actions/upload-artifact@v4
        with:
          name: zn-m2-ipq6000-firmware
          path: openwrt/bin/targets/qualcommax/ipq60xx/*qcom_ipq6000_m2*.bin
          retention-days: 14
    
