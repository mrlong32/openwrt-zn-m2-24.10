name: ZN-M2 IPQ6000 固件（依赖与平台修复）

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: 安装系统依赖
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential git wget unzip gcc g++ make \
            libncurses5-dev libssl-dev python3 rsync file ccache

      - name: 克隆源码并筛选支持分支
        run: |
          git clone https://github.com/LiBwrt/openwrt-6.x.git openwrt
          cd openwrt
          git fetch --all
          
          # 列出所有分支并筛选
          echo "=== 所有可用分支 ==="
          git branch -a
          ALL_BRANCHES=$(git branch -r | grep -v "HEAD" | sed 's/origin\///' | sort -u)
          CANDIDATE_BRANCHES=$(echo "$ALL_BRANCHES" | grep -E "nss|ipq60|6\.[0-9]+|qualcomm" | sort -u)
          [ -z "$CANDIDATE_BRANCHES" ] && CANDIDATE_BRANCHES="$ALL_BRANCHES"
          
          # 切换分支
          FOUND_BRANCH=""
          for branch in $CANDIDATE_BRANCHES; do
            if git checkout "$branch"; then
              FOUND_BRANCH="$branch"
              break
            fi
          done
          [ -z "$FOUND_BRANCH" ] && { echo "所有分支无法切换"; exit 1; }
          
          # 搜索IPQ60xx配置（确保路径正确）
          IPQ60XX_CONFIGS=$(find target/linux/ -name "ipq60xx" -type d | head -n1)
          if [ -z "$IPQ60XX_CONFIGS" ]; then
            echo "分支$FOUND_BRANCH不支持IPQ60xx"; exit 1
          fi
          echo "IPQ60xx配置路径：$IPQ60XX_CONFIGS"
          
          # 修复feeds，确保基础库可用
          sed -i '/telephony/d; /kiddin9/d' feeds.conf.default
          ./scripts/feeds update -a -f || { ./scripts/feeds update -a -f || exit 1; }
          ./scripts/feeds install -a
          
          # 手动安装关键依赖包（核心修复）
          ./scripts/feeds install libcrypt-compat boost-system libxcrypt

      - name: 配置固件（修正平台目录+强制依赖）
        run: |
          cd openwrt
          
          # 【修复平台目录提取】正确获取平台名（如qualcommax）
          # 从路径"target/linux/qualcommax/ipq60xx"中提取"qualcommax"
          PLATFORM_DIR=$(echo "$IPQ60XX_CONFIGS" | awk -F '/' '{print $3}')
          if [ "$PLATFORM_DIR" = "." ] || [ -z "$PLATFORM_DIR" ]; then
            echo "错误：无法提取平台目录，当前路径：$IPQ60XX_CONFIGS"
            exit 1
          fi
          echo "正确平台目录：$PLATFORM_DIR"
          
          # 正确生成设备配置
          echo "CONFIG_TARGET_$PLATFORM_DIR=y" >> .config
          echo "CONFIG_TARGET_${PLATFORM_DIR}_ipq60xx=y" >> .config
          for device in "qcom_ipq6000_m2" "zn_m2"; do
            echo "CONFIG_TARGET_${PLATFORM_DIR}_ipq60xx_DEVICE_$device=y" >> .config
          done
          
          # 【强制添加缺失依赖】
          echo "CONFIG_PACKAGE_libcrypt-compat=y" >> .config  # 核心缺失依赖
          echo "CONFIG_PACKAGE_boost-system=y" >> .config
          echo "CONFIG_PACKAGE_libxcrypt=y" >> .config
          
          # 核心功能
          echo "CONFIG_PACKAGE_qca-nss-dp=y" >> .config
          echo "CONFIG_PACKAGE_kmod-ath11k=y" >> .config
          echo "CONFIG_PACKAGE_luci=y" >> .config
          
          # 【禁用依赖冲突的非必要包】
          echo "CONFIG_PACKAGE_alpine=n" >> .config
          echo "CONFIG_PACKAGE_apr=n" >> .config
          echo "CONFIG_PACKAGE_ccrypt=n" >> .config
          echo "CONFIG_PACKAGE_domoticz=n" >> .config
          echo "CONFIG_PACKAGE_exim=n" >> .config
          echo "CONFIG_PACKAGE_freeradius3=n" >> .config
          echo "CONFIG_PACKAGE_haproxy=n" >> .config
          echo "CONFIG_PACKAGE_i2pd=n" >> .config
          echo "CONFIG_PACKAGE_kea=n" >> .config
          echo "CONFIG_PACKAGE_libtorrent-rasterbar=n" >> .config
          echo "CONFIG_PACKAGE_trojan=n" >> .config
          
          make defconfig
          
          # 验证关键配置
          grep "CONFIG_TARGET_$PLATFORM_DIR=y" .config || { echo "平台配置错误"; exit 1; }
          grep "CONFIG_PACKAGE_libcrypt-compat=y" .config || { echo "依赖仍缺失"; exit 1; }

      - name: 编译固件
        run: |
          cd openwrt
          make -j1 V=s 2>&1 | tee compile.log || { tail -n 100 compile.log; exit 1; }

      - name: 搜索固件
        run: |
          cd openwrt
          FIRMWARE_FILE=$(find bin/ -name "*.bin" | grep -i "ipq6000.*m2" | head -n1)
          [ -z "$FIRMWARE_FILE" ] && { find bin/ -name "*.bin"; exit 1; }
          cp "$FIRMWARE_FILE" ./zn-m2-firmware.bin

      - name: 上传结果
        uses: actions/upload-artifact@v4
        with:
          name: zn-m2-ipq6000-firmware
          path: |
            openwrt/zn-m2-firmware.bin
            openwrt/compile.log
          retention-days: 14
    
