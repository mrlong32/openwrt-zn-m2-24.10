name: ZN-M2 IPQ6000 固件（分支筛选修复）

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: 安装系统依赖
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential git wget unzip gcc g++ make \
            libncurses5-dev libssl-dev python3 rsync file ccache

      - name: 精准筛选IPQ6000相关分支（核心修复）
        run: |
          git clone https://github.com/LiBwrt/openwrt-6.x.git openwrt
          cd openwrt
          git fetch --all
          
          echo "=== 仓库所有分支 ==="
          git branch -a
          
          # 【关键修复：只保留与IPQ6000相关的分支，排除IPQ50xx等无关分支】
          ALL_BRANCHES=$(git branch -r | grep -v "HEAD" | sed 's/origin\///' | sort -u)
          echo "=== 原始分支列表 ==="
          echo "$ALL_BRANCHES"
          
          # 筛选逻辑：
          # 1. 保留含"ipq60"（直接关联IPQ6000）
          # 2. 保留含"nss"（可能包含IPQ6000的NSS驱动）
          # 3. 排除含"ipq50"（明确无关的芯片）
          CANDIDATE_BRANCHES=$(echo "$ALL_BRANCHES" | \
            grep -E "ipq60|nss" | \
            grep -v "ipq50" | \
            sort -u)
          
          # 兜底：如果筛选后为空，尝试默认分支（k6.12-nss）
          if [ -z "$CANDIDATE_BRANCHES" ]; then
            echo "=== 未找到明确关联IPQ6000的分支，尝试默认分支k6.12-nss ==="
            CANDIDATE_BRANCHES="k6.12-nss"
          fi
          
          echo "=== 筛选后尝试的IPQ6000相关分支 ==="
          echo "$CANDIDATE_BRANCHES"
          
          # 尝试切换筛选后的分支
          FOUND_VALID_BRANCH=""
          FOUND_CONFIG_PATH=""
          for branch in $CANDIDATE_BRANCHES; do
            echo -e "\n=== 尝试分支: $branch（IPQ6000相关候选） ==="
            if git checkout "$branch"; then
              # 搜索IPQ6000配置
              CONFIG_PATHS=$(find target/linux/ -type d | grep -i "ipq6000")
              
              if [ -n "$CONFIG_PATHS" ]; then
                echo "=== 找到IPQ6000配置： ==="
                echo "$CONFIG_PATHS"
                FOUND_VALID_BRANCH="$branch"
                FOUND_CONFIG_PATH=$(echo "$CONFIG_PATHS" | head -n1)
                break
              else
                echo "=== 分支$branch无IPQ6000配置，target/linux结构： ==="
                ls -l target/linux/
              fi
            fi
          done
          
          # 最终验证
          if [ -z "$FOUND_VALID_BRANCH" ] || [ -z "$FOUND_CONFIG_PATH" ]; then
            echo -e "\n===== 所有相关分支均不支持IPQ6000 ====="
            exit 1
          fi
          
          echo -e "\n=== 确认使用分支：$FOUND_VALID_BRANCH ==="
          echo "=== 确认配置路径：$FOUND_CONFIG_PATH ==="
          
          # 处理feeds
          sed -i '/telephony/d; /kiddin9/d' feeds.conf.default
          ./scripts/feeds update -a -f || { ./scripts/feeds update -a -f || exit 1; }
          ./scripts/feeds install -a
          ./scripts/feeds install libcrypt-compat boost-system libxcrypt

      - name: 配置固件（基于有效路径）
        run: |
          cd openwrt
          
          # 路径解析（增强容错）
          IFS='/' read -ra PATH_PARTS <<< "$FOUND_CONFIG_PATH"
          echo "=== 路径拆分：${PATH_PARTS[@]} ==="
          
          PLATFORM_DIR=""
          if [ ${#PATH_PARTS[@]} -ge 3 ]; then
            PLATFORM_DIR="${PATH_PARTS[2]}"
          elif [ ${#PATH_PARTS[@]} -ge 2 ]; then
            PLATFORM_DIR="${PATH_PARTS[1]}"
          fi
          
          DEVICE_BASE="${PATH_PARTS[-1]}"
          
          if [ -z "$PLATFORM_DIR" ] || [ -z "$DEVICE_BASE" ]; then
            echo "路径解析失败：平台='$PLATFORM_DIR'，设备='$DEVICE_BASE'"
            exit 1
          fi
          
          # 生成配置
          echo "CONFIG_TARGET_$PLATFORM_DIR=y" >> .config
          echo "CONFIG_TARGET_${PLATFORM_DIR}_$DEVICE_BASE=y" >> .config
          for device in "zn_m2" "qcom_ipq6000_m2"; do
            echo "CONFIG_TARGET_${PLATFORM_DIR}_${DEVICE_BASE}_DEVICE_$device=y" >> .config
          done
          
          # 依赖与功能
          echo "CONFIG_PACKAGE_libcrypt-compat=y" >> .config
          echo "CONFIG_PACKAGE_boost-system=y" >> .config
          echo "CONFIG_PACKAGE_qca-nss-dp=y" >> .config
          echo "CONFIG_PACKAGE_luci=y" >> .config
          
          make defconfig
          grep "CONFIG_TARGET_${PLATFORM_DIR}_${DEVICE_BASE}=y" .config || exit 1

      - name: 编译固件
        run: |
          cd openwrt
          make -j1 V=s 2>&1 | tee compile.log || { tail -n 100 compile.log; exit 1; }

      - name: 搜索固件
        run: |
          cd openwrt
          FIRMWARE_FILE=$(find bin/ -name "*.bin" | grep -i "ipq6000.*m2" | head -n1)
          [ -z "$FIRMWARE_FILE" ] && { find bin/ -name "*.bin"; exit 1; }
          cp "$FIRMWARE_FILE" ./zn-m2-firmware.bin

      - name: 上传结果
        uses: actions/upload-artifact@v4
        with:
          name: zn-m2-ipq6000-firmware
          path: |
            openwrt/zn-m2-firmware.bin
            openwrt/compile.log
          retention-days: 14
    
