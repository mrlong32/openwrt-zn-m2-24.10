name: ZN-M2 IPQ6000 固件（修复未生成问题）

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: 安装系统依赖
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential git wget unzip gcc g++ make \
            libncurses5-dev libssl-dev python3 rsync file ccache

      - name: 克隆源码并验证设备支持
        run: |
          git clone https://github.com/LiBwrt/openwrt-6.x.git openwrt
          cd openwrt
          
          # 切换到默认分支
          DEFAULT_BRANCH=$(git remote show origin | grep "HEAD branch" | cut -d ":" -f 2 | xargs)
          [ -n "$DEFAULT_BRANCH" ] && git checkout "$DEFAULT_BRANCH"
          git branch
          
          # 【关键】验证IPQ6000-M2是否在支持的设备列表中
          echo "=== 查看LibWRT支持的IPQ60xx设备 ==="
          IPQ60XX_PROFILES="target/linux/qualcommax/ipq60xx/profiles"
          if [ -d "$IPQ60XX_PROFILES" ]; then
            ls -l "$IPQ60XX_PROFILES"
            # 搜索可能的设备命名（如m2、zn-m2等）
            grep -r "m2" "$IPQ60XX_PROFILES" || {
              echo "警告：未找到包含'm2'的设备配置，可能命名不同"
            }
          else
            echo "错误：IPQ60xx设备配置目录不存在"
            exit 1
          fi
          
          # 处理feeds
          sed -i '/telephony/d; /kiddin9/d' feeds.conf.default
          ./scripts/feeds update -a -f || { ./scripts/feeds update -a -f || exit 1; }
          ./scripts/feeds install -a

      - name: 配置固件（适配可能的设备命名）
        run: |
          cd openwrt
          
          # 尝试多种可能的设备命名（核心修复）
          echo "CONFIG_TARGET_qualcommax=y" >> .config
          echo "CONFIG_TARGET_qualcommax_ipq60xx=y" >> .config
          # 可能的设备名：qcom_ipq6000_m2、zn_m2、ipq6000-zn-m2等
          echo "CONFIG_TARGET_qualcommax_ipq60xx_DEVICE_qcom_ipq6000_m2=y" >> .config
          echo "CONFIG_TARGET_qualcommax_ipq60xx_DEVICE_zn_m2=y" >> .config  # 备选
          echo "CONFIG_TARGET_qualcommax_ipq60xx_DEVICE_ipq6000-zn-m2=y" >> .config  # 备选
          
          # 核心功能配置
          echo "CONFIG_PACKAGE_qca-nss-dp=y" >> .config
          echo "CONFIG_PACKAGE_qca-nss-ecm=y" >> .config
          echo "CONFIG_PACKAGE_kmod-ath11k=y" >> .config
          echo "CONFIG_PACKAGE_ath11k-firmware-qcn9074=y" >> .config
          echo "CONFIG_PACKAGE_luci=y" >> .config
          
          # 解决依赖
          echo "CONFIG_PACKAGE_boost-system=y" >> .config
          echo "CONFIG_PACKAGE_libpam=y" >> .config
          echo "CONFIG_PACKAGE_liblzma=y" >> .config
          
          make defconfig
          
          # 查看实际启用的目标设备
          echo "=== 实际启用的设备配置 ==="
          grep "CONFIG_TARGET_DEVICE_qualcommax_ipq60xx_DEVICE" .config

      - name: 编译固件（捕获错误）
        run: |
          cd openwrt
          # 编译并检查返回码
          if ! make -j1 V=s 2>&1 | tee compile.log; then
            echo "=== 编译错误，最后100行日志 ==="
            tail -n 100 compile.log
            exit 1
          fi

      - name: 扩展搜索固件（核心修复）
        run: |
          cd openwrt/bin/targets/qualcommax/ipq60xx
          echo "=== 查看输出目录所有文件 ==="
          ls -l
          
          # 扩展搜索模式（不严格匹配设备名，避免命名差异）
          FIRMWARE_FILE=$(find . -name "*.bin" | grep -i "ipq6000.*m2" | head -n1)
          if [ -z "$FIRMWARE_FILE" ]; then
            echo "=== 未找到目标固件，尝试搜索所有bin文件 ==="
            find . -name "*.bin"
            exit 1
          fi
          echo "=== 找到固件：$FIRMWARE_FILE ==="

      - name: 上传固件和日志
        uses: actions/upload-artifact@v4
        with:
          name: zn-m2-ipq6000-firmware
          path: |
            openwrt/bin/targets/qualcommax/ipq60xx/*.bin
            openwrt/compile.log
          retention-days: 14
    
