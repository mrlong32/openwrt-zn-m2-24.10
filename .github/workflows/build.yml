name: ZN-M2 OpenWRT 24.10 Build (LiBwrt官方适配版)

on:
  workflow_dispatch:  # 仅手动触发

jobs:
  build_zn_m2:
    runs-on: ubuntu-22.04
    steps:
      - name: 1. 基础环境准备
        run: |
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo apt update -y && sudo apt install -y \
            build-essential clang flex bison g++ gawk gcc-multilib g++-multilib \
            gettext git libncurses5-dev libssl-dev python3 python3-distutils \
            rsync unzip zlib1g-dev file wget curl ccache

      - name: 2. 克隆LiBwrt源码+验证设备树
        run: |
          git clone -b k6.12-nss --single-branch https://github.com/LiBwrt/openwrt-6.x.git openwrt
          cd openwrt
          # 关键验证：确认ZN-M2设备树存在（不存在则报错中断）
          if [ ! -f "target/linux/qualcommax/files/arch/arm64/boot/dts/qcom/ipq6000-m2.dts" ]; then
            echo "错误：ZN-M2设备树不存在！"
            exit 1
          fi
          # 关键验证：确认设备定义在ipq60xx.mk中
          if ! grep -q "qcom_ipq6000_m2" "target/linux/qualcommax/image/ipq60xx.mk"; then
            echo "错误：ZN-M2设备定义缺失！"
            exit 1
          fi

      - name: 3. 强制锁定ZN-M2设备（核心修复）
        run: |
          cd openwrt
          # 彻底清空配置，避免任何默认设备干扰
          > .config
          # 仅保留ZN-M2必需配置，不添加任何多余项
          echo 'CONFIG_TARGET_qualcommax=y' >> .config
          echo 'CONFIG_TARGET_qualcommax_ipq60xx=y' >> .config
          echo 'CONFIG_TARGET_qualcommax_ipq60xx_DEVICE_qcom_ipq6000_m2=y' >> .config
          # 禁用所有其他架构（关键：阻止ath79编译）
          echo 'CONFIG_TARGET_ath79=n' >> .config
          echo 'CONFIG_TARGET_mediatek=n' >> .config
          echo 'CONFIG_TARGET_bcm27xx=n' >> .config
          # 基础功能（保持最小）
          echo 'CONFIG_PACKAGE_luci=y' >> .config
          echo 'CONFIG_PACKAGE_luci-ssl=y' >> .config
          echo 'CONFIG_TARGET_ROOTFS_SQUASHFS=y' >> .config
          # 验证配置正确性（立即发现错误）
          if ! grep -q "qcom_ipq6000_m2" .config; then
            echo "错误：设备配置未生效！"
            exit 1
          fi
          # 生成最终配置
          make defconfig

      - name: 4. 更新Feeds+下载依赖
        run: |
          cd openwrt
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          make download -j$(nproc)
          find dl -size 0 -delete

      - name: 5. 编译+验证输出路径
        run: |
          cd openwrt
          make -j1 V=s
          # 强制验证输出目录（只允许qualcommax/ipq60xx）
          echo "=== 固件输出目录验证 ==="
          if [ ! -d "bin/targets/qualcommax/ipq60xx" ]; then
            echo "错误：未生成ipq60xx目录！"
            exit 1
          fi
          # 验证固件文件名（必须含ZN-M2设备名）
          echo "=== 固件文件验证 ==="
          ls -l bin/targets/qualcommax/ipq60xx/*.bin
          if ! ls bin/targets/qualcommax/ipq60xx/*qcom_ipq6000_m2*.bin 1> /dev/null 2>&1; then
            echo "错误：未生成ZN-M2固件！"
            exit 1
          fi

      - name: 6. 上传ZN-M2专属固件
        uses: actions/upload-artifact@v4
        with:
          name: ZN-M2_OpenWRT_24.10_Firmware
          path: |
            openwrt/bin/targets/qualcommax/ipq60xx/*qcom_ipq6000_m2*.bin
            openwrt/bin/targets/qualcommax/ipq60xx/*qcom_ipq6000_m2*.img
