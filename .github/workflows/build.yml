name: ZN-M2 OpenWRT 24.10（ipq60xx+NSS）
on:
  workflow_dispatch:

jobs:
  build_znm2_ipq60xx:
    runs-on: ubuntu-22.04
    steps:
      - name: 1. 安装完整依赖（含终端+缺失库）
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/apt/sources.list.d/*
          sudo apt update -y
          sudo apt install -y build-essential clang flex bison g++ gawk gcc-multilib g++-multilib \
            gettext git libncurses5-dev libssl-dev python3 python3-distutils rsync unzip zlib1g-dev \
            file wget llvm llvm-dev lld libev-dev libpam-dev libtirpc-dev liblzma-dev libnetsnmp-dev \
            ncurses-term 

      - name: 2. 克隆OpenWRT 24.10源码+清理残留
        run: |
          git clone https://github.com/openwrt/openwrt.git openwrt
          cd openwrt
          git checkout openwrt-24.10
          git pull
          make clean && make dirclean && rm -f .config .config.old

      - name: 3. 引入LibWRT NSS组件（仅ipq60xx）
        run: |
          cd openwrt
          mkdir -p package/libwrt-nss
          git clone -b k6.12-nss --single-branch https://github.com/LiBwrt/openwrt-6.x.git temp-nss
          mv temp-nss/package/kernel/qca-nss-dp package/libwrt-nss/
          mv temp-nss/package/kernel/qca-nss-ecm package/libwrt-nss/
          mv temp-nss/package/kernel/qca-nss-gmac package/libwrt-nss/
          mv temp-nss/package/kernel/qca-nss-ppe package/libwrt-nss/
          mkdir -p target/linux/qualcommax/patches-6.12/nss
          mv temp-nss/target/linux/qualcommax/patches-6.12/nss/* target/linux/qualcommax/patches-6.12/nss/
          rm -rf temp-nss

      - name: 4. 添加ZN-M2设备（ipq60xx专属）
        run: |
          cd openwrt
          mkdir -p target/linux/qualcommax/files/arch/arm64/boot/dts/qcom/
          printf '/dts-v1/;\n#include "ipq6000-cmiot.dtsi"\n#include <dt-bindings/gpio/gpio.h>\n#include <dt-bindings/input/input.h>\n\n/ {\n    model = "ZN M2";\n    compatible = "zn,m2", "qcom,ipq6018";\n\n    aliases {\n        led-boot = &led_power;\n        led-failsafe = &led_power;\n        led-running = &led_power;\n        led-upgrade = &led_power;\n    };\n\n    leds {\n        compatible = "gpio-leds";\n        led_power: power {\n            label = "blue:power";\n            gpios = <&tlmm 58 GPIO_ACTIVE_HIGH>;\n        };\n    };\n\n    keys {\n        compatible = "gpio-keys";\n        reset {\n            label = "reset";\n            gpios = <&tlmm 63 GPIO_ACTIVE_LOW>;\n            linux,code = <KEY_RESTART>;\n            debounce-interval = <60>;\n        };\n    };\n};\n\n&nss_dp {\n    status = "okay";\n    qcom,nss-dp-phy-sel = <0x0>;\n};\n\n&nss_gmac0 {\n    status = "okay";\n    label = "eth0";\n};\n\n&nss_gmac1 {\n    status = "okay";\n    label = "eth1";\n};\n\n&wifi {\n    status = "okay";\n    qcom,ath11k-calibration-variant = "ZN-M2";\n};\n\n&usb3 {\n    status = "okay";\n};\n\n&usb3_phy {\n    status = "okay";\n};\n' > target/linux/qualcommax/files/arch/arm64/boot/dts/qcom/ipq6000-m2.dts
          printf '\n#define Device/qcom_ipq6000_m2\n  $(call Device/FitImage)\n  $(call Device/UbiFit)\n  DEVICE_VENDOR := ZN\n  DEVICE_MODEL := M2\n  DEVICE_DTS := qcom/ipq6000-m2\n  DEVICE_PACKAGES := kmod-usb3 kmod-usb-dwc3-qcom kmod-leds-gpio kmod-ath11k-ahb \\\n                     kmod-qca-nss-dp kmod-qca-nss-ecm kmod-qca-nss-gmac kmod-qca-nss-ppe\n  SUPPORTED_DEVICES += ipq6000-m2\nendef\nTARGET_DEVICES += qcom_ipq6000_m2\n' >> target/linux/qualcommax/image/ipq60xx.mk

      - name: 5. 配置编译（禁用终端交互+补全依赖）
        run: |
          cd openwrt
          export TERM=linux
          > .config
          echo 'CONFIG_TARGET_qualcommax=y' >> .config
          echo 'CONFIG_TARGET_qualcommax_ipq60xx=y' >> .config
          echo 'CONFIG_TARGET_qualcommax_ipq60xx_DEVICE_qcom_ipq6000_m2=y' >> .config
          echo 'CONFIG_PACKAGE_libev=y' >> .config    
          echo 'CONFIG_PACKAGE_libpam=y' >> .config   
          echo 'CONFIG_PACKAGE_libtirpc=y' >> .config 
          echo 'CONFIG_PACKAGE_liblzma=y' >> .config  
          echo 'CONFIG_PACKAGE_libnetsnmp=y' >> .config 
          echo 'CONFIG_PACKAGE_luci=y' >> .config
          echo 'CONFIG_PACKAGE_luci-ssl=y' >> .config
          echo 'CONFIG_TARGET_ROOTFS_SQUASHFS=y' >> .config
          echo 'CONFIG_PACKAGE_opkg=y' >> .config
          echo 'CONFIG_PACKAGE_wpad-basic-wifi=y' >> .config
          echo 'CONFIG_PACKAGE_kmod-qca-nss-dp=y' >> .config
          echo 'CONFIG_PACKAGE_kmod-qca-nss-ecm=y' >> .config
          echo 'CONFIG_PACKAGE_kmod-qca-nss-gmac=y' >> .config
          echo 'CONFIG_PACKAGE_kmod-qca-nss-ppe=y' >> .config
          echo 'CONFIG_KERNEL_NET_NSS=y' >> .config
          echo 'CONFIG_TARGET_ath79=n' >> .config
          make defconfig || { echo "defconfig失败，强制生成配置"; make oldconfig < /dev/null; }

      - name: 6. 更新Feeds+安装包
        run: |
          cd openwrt
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          ./scripts/feeds install -p libwrt-nss -a
          ./scripts/feeds install libev libpam libtirpc liblzma libnetsnmp

      - name: 7. 下载依赖包
        run: |
          cd openwrt
          make download -j$(nproc)
          find dl -size 0 -delete

      - name: 8. 编译固件（禁用终端输出干扰）
        run: |
          cd openwrt
          export TERM=linux
          make -j1 V=s 2>&1 | tee compile.log

      - name: 9. 验证固件+上传
        run: |
          cd openwrt
          if ls bin/targets/qualcommax/ipq60xx/*.bin 1> /dev/null 2>&1; then
            echo "=== ZN-M2固件生成成功 ==="
            ls -l bin/targets/qualcommax/ipq60xx/*.bin
          else
            echo "=== 固件生成失败，打印最后100行日志 ==="
            tail -100 compile.log
            exit 1
          fi
      - name: 10. 上传 artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ZN-M2_OpenWRT_24.10_ipq60xx_NSS
          path: openwrt/bin/targets/qualcommax/ipq60xx/*.bin
          retention-days: 1
