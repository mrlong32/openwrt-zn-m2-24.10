name: ZN-M2 IPQ6000 固件（LibWRT分支修复版）

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: 安装依赖
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential git wget unzip gcc g++ make \
            libncurses5-dev libssl-dev python3 rsync file

      - name: 自动适配LibWRT分支与结构
        run: |
          # 克隆LibWRT仓库
          git clone https://github.com/LiBwrt/openwrt-6.x.git openwrt
          cd openwrt
          
          # 【关键修复：自动检测并使用仓库默认分支】
          echo "=== 检测仓库默认分支 ==="
          DEFAULT_BRANCH=$(git remote show origin | grep "HEAD branch" | cut -d ":" -f 2 | xargs)
          if [ -z "$DEFAULT_BRANCH" ]; then
            echo "无法检测默认分支，使用仓库当前HEAD"
          else
            echo "切换到默认分支: $DEFAULT_BRANCH"
            git checkout "$DEFAULT_BRANCH" || {
              echo "默认分支切换失败，使用当前分支"
            }
          fi
          git branch  # 显示当前使用的分支
          
          # 修正Feeds配置
          echo "=== 修正Feeds配置 ==="
          sed -i '/telephony/d' feeds.conf.default  # 删除telephony源
          sed -i '/kiddin9/d' feeds.conf.default    # 删除kiddin9源
          cat feeds.conf.default
          
          # 更新feeds
          echo "=== 更新feeds ==="
          ./scripts/feeds update -a -f || {
            echo "Feeds更新失败，重试一次"
            ./scripts/feeds update -a -f || exit 1
          }
          ./scripts/feeds install -a
          
          # 搜索NSS驱动
          echo "=== 搜索NSS驱动 ==="
          NSS_DRIVER_PATH=$(find package/ -name "qca-nss-dp" -type d | head -n1)
          if [ -z "$NSS_DRIVER_PATH" ]; then
            echo "错误：未找到NSS驱动，package目录结构："
            ls -l package/
            exit 1
          fi
          echo "NSS驱动路径：$NSS_DRIVER_PATH"
          
          # 清理非官方插件
          echo "=== 清理非官方插件 ==="
          rm -rf package/feeds/kiddin9/  # 若存在
          rm -rf package/luci-app-*  # 非官方LuCI插件
          
          # 验证NSS驱动保留
          if [ -z "$(find package/ -name "qca-nss-*")" ]; then
            echo "错误：NSS驱动被误删"
            exit 1
          fi

      - name: 配置固件
        run: |
          cd openwrt
          
          # 设备配置
          echo "CONFIG_TARGET_qualcommax=y" >> .config
          echo "CONFIG_TARGET_qualcommax_ipq60xx=y" >> .config
          echo "CONFIG_TARGET_qualcommax_ipq60xx_DEVICE_qcom_ipq6000_m2=y" >> .config
          
          # NSS驱动配置
          echo "CONFIG_PACKAGE_qca-nss-dp=y" >> .config
          echo "CONFIG_PACKAGE_qca-nss-ecm=y" >> .config
          echo "CONFIG_PACKAGE_qca-nss-gmac=y" >> .config
          echo "CONFIG_PACKAGE_qca-nss-clients=y" >> .config
          
          # 基础组件
          echo "CONFIG_PACKAGE_luci=y" >> .config
          echo "CONFIG_PACKAGE_kmod-ath11k=y" >> .config
          echo "CONFIG_PACKAGE_ath11k-firmware-qcn9074=y" >> .config
          
          make defconfig
          grep "qca-nss-dp=y" .config || { echo "NSS驱动未配置"; exit 1; }

      - name: 编译固件
        run: |
          cd openwrt
          make -j1 V=s 2>&1 | tee compile.log

      - name: 验证固件
        run: |
          cd openwrt/bin/targets/qualcommax/ipq60xx
          ls -l *qcom_ipq6000_m2*.bin || { echo "未生成目标固件"; exit 1; }

      - name: 上传固件
        uses: actions/upload-artifact@v4
        with:
          name: zn-m2-ipq6000-firmware
          path: openwrt/bin/targets/qualcommax/ipq60xx/*qcom_ipq6000_m2*.bin
          retention-days: 14
    
