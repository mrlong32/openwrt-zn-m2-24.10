name: ZN-M2 OpenWRT 24.10 Build

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: 安装编译依赖
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install build-essential clang flex bison g++ gawk gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev python3 python3-distutils rsync unzip zlib1g-dev file wget curl

      - name: 获取OpenWRT 24.10源码
        run: |
          git clone https://github.com/openwrt/openwrt.git openwrt
          cd openwrt
          git checkout openwrt-24.10
          git pull

      - name: 集成LibWRT组件 (修复下载错误)
        run: |
          cd openwrt
          
          # 使用直接zip链接下载LibWRT源码
          mkdir -p package/libwrt
          wget https://github.com/LiBwrt/openwrt-6.x/archive/refs/heads/master.zip -O libwrt.zip
          unzip -q libwrt.zip -d package/libwrt
          mv package/libwrt/*/* package/libwrt/
          rm -f libwrt.zip
          
          # 下载luci-app-libwrt
          mkdir -p package/luci-app-libwrt
          wget https://github.com/libwrt/luci-app-libwrt/archive/refs/heads/master.zip -O luci-app-libwrt.zip
          unzip -q luci-app-libwrt.zip -d package/luci-app-libwrt
          mv package/luci-app-libwrt/*/* package/luci-app-libwrt/
          rm -f luci-app-libwrt.zip
          
          # 下载设备树文件
          mkdir -p libwrt-dts
          wget https://github.com/libwrt/device-tree-overlays/archive/refs/heads/master.zip -O device-tree-overlays.zip
          unzip -q device-tree-overlays.zip -d libwrt-dts
          mv libwrt-dts/*/* libwrt-dts/
          rm -f device-tree-overlays.zip

      - name: 添加ZN-M2设备支持
        run: |
          # 复制设备树文件
          cd openwrt
          mkdir -p target/linux/ipq60xx/dts/qcom/
          cp ../libwrt-dts/ipq60xx/qcom-ipq6018-zn-m2.dts target/linux/ipq60xx/dts/qcom/ || {
            echo "设备树文件不存在，使用备用设备树"
            # 如果找不到设备树文件，使用我们之前定义的版本
            cat > target/linux/ipq60xx/dts/qcom/qcom-ipq6018-zn-m2.dts << 'EOF'
            /dts-v1/;

            #include "qcom-ipq6018.dtsi"
            #include <dt-bindings/gpio/gpio.h>
            #include <dt-bindings/input/input.h>

            / {
                model = "ZN M2";
                compatible = "zn,zn-m2", "qcom,ipq6018";

                aliases {
                    led-boot = &led_status;
                    led-failsafe = &led_status;
                    led-running = &led_status;
                    led-upgrade = &led_status;
                };

                chosen {
                    bootargs-append = " root=/dev/ubiblock0_1";
                };

                leds {
                    compatible = "gpio-leds";

                    led_status: status {
                        label = "zn-m2:blue:status";
                        gpios = <&tlmm 47 GPIO_ACTIVE_LOW>;
                        default-state = "on";
                    };

                    wlan2g {
                        label = "zn-m2:green:wlan2g";
                        gpios = <&tlmm 48 GPIO_ACTIVE_LOW>;
                    };

                    wlan5g {
                        label = "zn-m2:green:wlan5g";
                        gpios = <&tlmm 45 GPIO_ACTIVE_LOW>;
                    };
                };

                keys {
                    compatible = "gpio-keys";

                    reset {
                        label = "reset";
                        gpios = <&tlmm 63 GPIO_ACTIVE_LOW>;
                        linux,code = <KEY_RESTART>;
                        debounce-interval = <60>;
                    };
                };
            };

            &blsp1_uart3 {
                status = "okay";
            };

            &cryptobam {
                status = "okay";
            };

            &qpic_bam {
                status = "okay";
            };

            &wifi0 {
                status = "okay";
                qcom,ath10k-calibration-variant = "ZN-M2";
            };

            &wifi1 {
                status = "okay";
                qcom,ath10k-calibration-variant = "ZN-M2";
            };

            &usb3 {
                status = "okay";
            };

            &usb3_phy {
                status = "okay";
            };

            &uartconsole {
                status = "okay";
            };

            &prng {
                status = "okay";
            };

            &blsp_dma {
                status = "okay";
            };

            &watchdog {
                status = "okay";
            };
            EOF
          }
          
          # 修改Makefile添加设备
          cat >> target/linux/ipq60xx/image/generic.mk << 'EOF'
          define Device/qcom_ipq6018_zn-m2
            $(call Device/FitImage)
            $(call Device/UbiFit)
            DEVICE_VENDOR := ZN
            DEVICE_MODEL := M2
            DEVICE_DTS := qcom-ipq6018-zn-m2
            DEVICE_PACKAGES := kmod-usb3 kmod-usb-dwc3-qcom kmod-leds-gpio
            SUPPORTED_DEVICES += zn-m2
          endef
          TARGET_DEVICES += qcom_ipq6018_zn-m2
          EOF

      - name: 配置编译选项
        run: |
          cd openwrt
          echo 'CONFIG_TARGET_ipq60xx=y' >> .config
          echo 'CONFIG_TARGET_ipq60xx_generic=y' >> .config
          echo 'CONFIG_TARGET_ipq60xx_generic_DEVICE_qcom_ipq6018_zn-m2=y' >> .config
          echo 'CONFIG_PACKAGE_luci=y' >> .config
          echo 'CONFIG_PACKAGE_luci-ssl=y' >> .config
          echo 'CONFIG_PACKAGE_libwrt=y' >> .config
          echo 'CONFIG_PACKAGE_luci-app-libwrt=y' >> .config
          echo 'CONFIG_PACKAGE_kmod-wireguard=y' >> .config
          echo 'CONFIG_PACKAGE_wireguard-tools=y' >> .config

      - name: 更新 feeds
        run: |
          cd openwrt
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: 下载软件包
        run: |
          cd openwrt
          make download -j$(nproc)
          find dl -size 0 -delete
          rm -rf $(find dl -type f -name "*.sha256" -print)

      - name: 编译固件
        run: |
          cd openwrt
          make -j$(nproc) || make -j1 V=s

      - name: 上传编译结果
        uses: actions/upload-artifact@v4
        with:
          name: zn-m2-openwrt-24.10-firmware
          path: openwrt/bin/targets/ipq60xx/generic/*.bin
    
